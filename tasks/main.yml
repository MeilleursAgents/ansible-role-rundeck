---
# tasks file for rundeck
- name: create rundeck directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ rundeck_rdeckbase }}"
    - "{{ rundeck_rdeckbase }}/etc"
    - "{{ rundeck_rdeckbase }}/var"

- name: download rundeck
  get_url:
    url: "{{ rundeck_download_url }}/{{ rundeck_jar }}"
    dest: "{{ rundeck_rdeckbase }}/{{ rundeck_jar }}"

# - name: unpack rundeck
#   command: java -jar {{ rundeck_rdeckbase }}/rundeck-launcher-{{ rundeck_version }}.jar --installonly
#   args:
#     creates: "{{ rundeck_rdeckbase }}/etc/framework.properties"
#   notify:
#     - wait until unpacked

- name: register rundeck to a sysvinit system
  template:
    src: templates/rundeck.j2
    dest: "/etc/init.d/rundeck"
    mode: 0750
  when:
    - ansible_service_mgr == "sysvinit" or ansible_service_mgr == "upstart"

- name: register rundeck to a systemd system
  template:
    src: templates/rundeck.service.j2
    dest: /etc/systemd/system/rundeck.service
  when:
    - ansible_service_mgr == "systemd"
  notify:
    - systemd daemon reload

- name: unpack rundeck
  service:
    name: rundeck
    state: started
  notify:
    - wait until unpacked

# - name: configure rundeck profile
#   template:
#     src: templates/profile.j2
#     dest: "{{ rundeck_rdeckbase }}/etc/profile"

- name: flush_handlers
  meta: flush_handlers

- name: configure rundeck properties
  lineinfile:
    dest: "{{ rundeck_rdeckbase }}/server/config/rundeck-config.properties"
    line: "grails.serverURL={{ rundeck_url }}"
    regexp: "^grails.serverURL"

- name: configure rundeck framework
  lineinfile:
    dest: "{{ rundeck_rdeckbase }}/etc/framework.properties"
    line: "{{ item.parameter }} = {{ item.value }}"
    regexp: "^{{ item.parameter }}"
    create: yes
  notify: restart rundeck
  with_items:
    - "{{ rundeck_framework }}"

- name: start rundeck
  service:
    name: rundeck
    state: started
    enabled: true
  when:
    - ansible_virtualization_type != "docker"
